{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GridGifItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GridGifItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAkBzC,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAQ,IAC7BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAnBoB,SAACP,GACzBF,EAAeE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,gDACgCC,UAAWH,GAD3C,+DAEHI,MAAOF,GAFJ,cAEhBG,EAFgB,gBAGDA,EAAKC,OAHJ,uBAGfC,EAHe,EAGfA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAThB,kBAcfM,GAde,4CAAH,sDCCRO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACnC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCsBSO,EAxBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAN,SAAEA,GAAe,IAAD,EAChBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAyB1C,OAnBAC,qBAAU,WAERxB,EAASC,GACNwB,MAAM,SAAAC,GAELC,YAAW,WAETJ,EAAS,CACPf,KAAMkB,EACNL,SAAS,MAEV,UAKN,CAACpB,IAGGqB,EDvB0BM,CAAc3B,GAAlCa,EAFmB,EAExBN,KAAaa,EAFW,EAEXA,QAErB,OACE,qCACE,qBAAIJ,UAAU,oCAAd,cAAqDhB,KAEnDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEgBXiB,EA9BM,WAAO,IAAD,EAEW1C,mBAAS,CAAC,cAFrB,mBAElB2C,EAFkB,KAEN5C,EAFM,KAUzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEI4C,EAAWpB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,MClBpB8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.95bb4acf.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue( e.target.value )\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if ( inputValue.trim().length >2 ) {\r\n      setCategories( cats => [ inputValue, ...cats ]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type=\"text\"\r\n        value= {inputValue}\r\n        onChange={ handleInputChange }\r\n      />     \r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: propTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\nexport  const getGifs = async( category ) => {\r\n  const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=4tK1ZPimokFRyeEQ1mnvRoux8939yWqv`\r\n  const resp = await fetch( url );\r\n  const {data} = await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n\r\n    }\r\n  })\r\n  \r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GridGifItem = ({ title, url}) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__zoomIn\">\r\n      <img src={ url } alt={ title } />\r\n      <p> { title } </p> \r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GridGifItem } from './GridGifItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\"> { category }</h3>\r\n\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n      <div className=\"card-grid\">\r\n          {\r\n            images.map( img => (\r\n              <GridGifItem\r\n                key={ img.id }\r\n                { ...img } \r\n              /> \r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n  \r\n  useEffect(() => {\r\n    \r\n    getGifs( category )\r\n      .then( imgs => {\r\n\r\n        setTimeout(() => {\r\n\r\n          setState({\r\n            data: imgs,\r\n            loading: false\r\n          });          \r\n        }, 3000);\r\n\r\n      })\r\n\r\n\r\n  }, [category])\r\n  \r\n\r\n  return state; // {data:[], loading: true}\r\n\r\n}\r\n","import React, {useState} from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  // const handleAdd = () => {\r\n  //   setCategories([...categories, 'HunterXhunter']);    \r\n  //   // setCategories( cats => [ ...cats, 'HunterXHunter']);\r\n  // }\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid \r\n              key={ category }\r\n              category={ category }\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}